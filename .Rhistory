corr <- round(cor(continuous_features), 1)
p.mat <- cor_pmat(continuous_features)
ggcorrplot(corr)
str(attr)
as.numeric(attr$JobRole)
str(attr)
attr$JobRole <- as.numeric(attr$JobRole)
attr$JobRole
continuous_features = attr %>% select(
Age,
DailyRate,
DistanceFromHome,
EmployeeNumber,
HourlyRate,
MonthlyIncome,
MonthlyRate,
NumCompaniesWorked,
PercentSalaryHike,
TotalWorkingYears,
TrainingTimesLastYear,
YearsAtCompany,
YearsInCurrentRole,
YearsSinceLastPromotion,
YearsWithCurrManager,
Education,
EnvironmentSatisfaction,
JobInvolvement,
JobLevel,
JobSatisfaction,
PerformanceRating,
RelationshipSatisfaction,
StockOptionLevel,
WorkLifeBalance,JobRole
)
corr <- round(cor(continuous_features), 1)
p.mat <- cor_pmat(continuous_features)
ggcorrplot(corr)
feat1  = attr %>% select(Attrition, JobRole, RelationshipSatisfaction )
ggpairs(feat1, mapping=ggplot2::aes(color = Attrition), progress = F)
attr$YearsBeforeCompany = attr$TotalWorkingYears - attr$YearsAtCompany
attr$LogTotalWorkingYears = log(attr$TotalWorkingYears + 1)
feat3  = attr %>% select(Attrition, Age, MonthlyIncome, YearsBeforeCompany, JobLevel)
ggpairs(feat3, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
attr$LogMonthlyIncome = log(attr$MonthlyIncome + 1)
attr$LogYearsBeforeCompany= log(attr$YearsBeforeCompany + 1)
feat3  = attr %>% select(Attrition, Age, LogMonthlyIncome, LogYearsBeforeCompany, JobLevel)
ggpairs(feat3, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
feat4  = attr %>% select(Attrition, PercentSalaryHike, PerformanceRating, NumCompaniesWorked, Education, YearsBeforeCompany)
ggpairs(feat4, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
attr$LogNumCompaniesWorked = log(attr$NumCompaniesWorked + 1)
attr$LogYearsBeforeCompany = log(attr$YearsBeforeCompany + 1)
feat5  = attr %>% select(Attrition, PercentSalaryHike, PerformanceRating, LogNumCompaniesWorked, Education, LogYearsBeforeCompany)
ggpairs(feat5, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
attr$LogDistanceFromHome = log(attr$DistanceFromHome + 1)
feat6  = attr %>% select(Attrition, DailyRate, HourlyRate, MonthlyRate, LogDistanceFromHome)
ggpairs(feat6, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
feat6  = attr %>% select(Attrition, EmployeeNumber, TrainingTimesLastYear, StockOptionLevel, WorkLifeBalance)
ggpairs(feat6, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
feat7  = attr %>% select(Attrition, EnvironmentSatisfaction, JobInvolvement, RelationshipSatisfaction, JobSatisfaction)
ggpairs(feat7, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
attr$pressurePoint = pmin(
attr$JobSatisfaction,
attr$EnvironmentSatisfaction,
attr$RelationshipSatisfaction
)
attr$TotalSatisfaction = pmax(
attr$JobSatisfaction,
attr$EnvironmentSatisfaction,
attr$RelationshipSatisfaction
)
attr$pressurePointFull = pmin(
attr$JobSatisfaction,
attr$EnvironmentSatisfaction,
attr$RelationshipSatisfaction,
attr$JobInvolvement,
attr$WorkLifeBalance
)
attr$TotalSatisfactionFull = pmax(
attr$JobSatisfaction,
attr$EnvironmentSatisfaction,
attr$RelationshipSatisfaction,
attr$JobInvolvement,
attr$WorkLifeBalance
)
feat7  = attr %>% select(Attrition, pressurePoint, TotalSatisfaction, pressurePointFull, TotalSatisfactionFull)
ggpairs(feat7, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
cat_feats = attr %>% select(
Attrition,
BusinessTravel,
Department,
EducationField,
Gender,
JobRole,
MaritalStatus,
OverTime
)
ggplot(data = cat_feats, mapping = aes(x=JobRole, fill = Attrition)) + geom_bar(position="fill") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
tr = ggplot(data = cat_feats, mapping = aes(x=BusinessTravel, fill = Attrition)) + geom_bar(position="fill")
dep = ggplot(data = cat_feats, mapping = aes(x=Department, fill = Attrition)) + geom_bar(position="fill")
ge = ggplot(data = cat_feats, mapping = aes(x=Gender, fill = Attrition)) + geom_bar(position="fill")
ma = ggplot(data = cat_feats, mapping = aes(x=MaritalStatus, fill = Attrition)) + geom_bar(position="fill")
ov = ggplot(data = cat_feats, mapping = aes(x=OverTime, fill = Attrition)) + geom_bar(position="fill")
grid.arrange(tr, dep, ge, ma, ov)
ggplot(data = cat_feats, mapping = aes(x=EducationField, fill = Attrition)) + geom_bar(position="fill") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
ggplot(data = attr, mapping = aes(x=JobRole, y=LogMonthlyIncome)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
ggplot(attrition, mapping= aes(x=DistanceFromHome, fill= Attrition)) + geom_bar(position="dodge2") +
labs(x="Distance_From_Home", y = 'Frequency_of_Travel')+ ggtitle("Distance_From_Home")
attr$DistanceFromHome <-  attrition %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attr <- attr$DistanceFromHome
attr$DistanceFromHome <-  attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attr <- attr$DistanceFromHome
describe(attr$DistanceFromHome)
describe(attr$DistanceFromHome)
feat7  = attr %>% select(Attrition, pressurePoint, TotalSatisfaction, pressurePointFull, TotalSatisfactionFull)
ggpairs(feat7, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
measure_of_distancefrom home <- attr%>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
measure_of_distancefromhome <- attr%>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
measure_of_distancefromhome <- attr%>% mutate(DistanceFromHome = (if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
measure_of_distancefromhome <- attr%>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(caret)
library(SuperLearner)
library(gridExtra)
library(psych)
library(stats)
measure_of_distancefromhome <- attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
describe(attr$DistanceFromHome)
attr$DistanceFromHome <-  attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attr <- attr$DistanceFromHome
DistanceFromHome_Attrition <- attr %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
ggplot(attrition, mapping= aes(x=DistanceFromHome, fill= Attrition)) + geom_bar(position="dodge2") +
labs(x="Distance_From_Home", y = 'Frequency_of_Travel')+ ggtitle("Distance_From_Home")
describe(attr$DistanceFromHome)
attr$DistanceFromHome <-  attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attr <- attr$DistanceFromHome
DistanceFromHome_Attrition <- attr %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
ggplot(attr, mapping= aes(x=DistanceFromHome, fill= Attr)) + geom_bar(position="dodge2") +
labs(x="Distance_From_Home", y = 'Frequency_of_Travel')+ ggtitle("Distance_From_Home")
attr <- data.frame(attr)
attr$DistanceFromHome <-  attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attr <- attr$DistanceFromHome
DistanceFromHome_Attrition <- attr %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
attr$DistanceFromHome <-  attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attr$DistanceFromHome <-  attr %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
attr$DistanceFromHome <-  attr %>% mutate(attr$DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attr$DistanceFromHome), "Low", "High")))
?-one_of()
?one_of()
attr = attr %>% select(-one_of( c("ID", "EmployeeCount", "Over18", "StandardHours")))
str(attr)
attr = read_csv(file.choose(),
col_types = cols(
Attrition = col_character(),
BusinessTravel = col_factor(),
Department = col_factor(),
EducationField = col_factor(),
Gender = col_factor(),
JobRole = col_factor(),
MaritalStatus = col_factor(),
OverTime = col_factor(),
Age = col_integer(),
DailyRate = col_integer(),
DistanceFromHome = col_integer(),
EmployeeNumber = col_integer(),
HourlyRate = col_integer(),
MonthlyIncome = col_integer(),
MonthlyRate = col_integer(),
NumCompaniesWorked = col_integer(),
PercentSalaryHike = col_integer(),
TotalWorkingYears = col_integer(),
TrainingTimesLastYear = col_integer(),
YearsAtCompany = col_integer(),
YearsInCurrentRole = col_integer(),
YearsSinceLastPromotion = col_integer(),
YearsWithCurrManager = col_integer(),
Education = col_integer(),
EnvironmentSatisfaction = col_integer(),
JobInvolvement = col_integer(),
JobLevel = col_integer(),
JobSatisfaction = col_integer(),
PerformanceRating = col_integer(),
RelationshipSatisfaction = col_integer(),
StockOptionLevel = col_integer(),
WorkLifeBalance = col_integer()
)
)
str(attr)
wt_salary<- read.csv(file.choose(), header = TRUE, sep = ",")
no_salary <- read.csv(file.choose(), header = TRUE, sep = ",")
attrition <- c(wt_salary,no_salary)
attrition
view(attrition)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(caret)
library(SuperLearner)
library(gridExtra)
library(psych)
library(stats)
view(attrition)
attrition <- data.frame(attrition)
wt_salary<- read.csv(file.choose(), header = TRUE, sep = ",")
no_salary <- read.csv(file.choose(), header = TRUE, sep = ",")
no_salary <- read.csv(file.choose(), header = TRUE)
no_salary
no_salary <- read.csv(file.choose(), header = TRUE)
no_salary
wt_salary<- read.csv(file.choose(), header = TRUE)
wt_salary
no_salary <- read.csv(file.choose(), header = TRUE)
no_salary <- read.csv(file.choose(), header = TRUE)
no_salary
no_salary <- read.csv(file.choose(), header = TRUE)
View(no_salary)
wt_salary<- read.csv(file.choose(), header = TRUE)
no_salary <- read.csv(file.choose(), header = TRUE)
attrition <- c(wt_salary,no_salary)
attrition <- data.frame(attrition)
view(attrition)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(caret)
library(SuperLearner)
library(gridExtra)
library(psych)
library(stats)
view(attrition)
attrition <- data.frame(attrition)
wt_salary<- read.csv(file.choose(), header = TRUE)
attrition <- data.frame(attrition)
attrition <- wt_salary
attrition <- data.frame(attrition)
view(attrition)
attrition_yes <- gsub("Yes", "Resigned",attrition$Attrition, ignore.case=T)
attrition_no <- gsub("No", "Employed",attrition_yes, ignore.case=T)
attrition$Attrition <- attrition_no
attrition %>% ggplot(aes(x= JobRole, y = RelationshipSatisfaction, fill = Attrition)) +
geom_boxplot() +
labs(title = "Boxplot of Job Role vs Relationship Satisfaction by Attrition") +
coord_flip()
library(class)
library(caret)
library(e1071)
library(GGally)
library(corrplot)
library(corrgram)
library(naniar)
library(gridExtra)
library(tidyverse)
attr = read_csv(
file.choose(),
col_types = cols(
Attrition = col_character(),
BusinessTravel = col_factor(),
Department = col_factor(),
EducationField = col_factor(),
Gender = col_factor(),
JobRole = col_factor(),
MaritalStatus = col_factor(),
OverTime = col_factor(),
Age = col_integer(),
DailyRate = col_integer(),
DistanceFromHome = col_integer(),
EmployeeNumber = col_integer(),
HourlyRate = col_integer(),
MonthlyIncome = col_integer(),
MonthlyRate = col_integer(),
NumCompaniesWorked = col_integer(),
PercentSalaryHike = col_integer(),
TotalWorkingYears = col_integer(),
TrainingTimesLastYear = col_integer(),
YearsAtCompany = col_integer(),
YearsInCurrentRole = col_integer(),
YearsSinceLastPromotion = col_integer(),
YearsWithCurrManager = col_integer(),
Education = col_integer(),
EnvironmentSatisfaction = col_integer(),
JobInvolvement = col_integer(),
JobLevel = col_integer(),
JobSatisfaction = col_integer(),
PerformanceRating = col_integer(),
RelationshipSatisfaction = col_integer(),
StockOptionLevel = col_integer(),
WorkLifeBalance = col_integer()
)
)
attr = attr %>% select(-one_of( c("ID", "EmployeeCount", "Over18", "StandardHours")))
gg_miss_var(attr)
continuous_features = attr %>% select(
Age,
DailyRate,
DistanceFromHome,
EmployeeNumber,
HourlyRate,
MonthlyIncome,
MonthlyRate,
NumCompaniesWorked,
PercentSalaryHike,
TotalWorkingYears,
TrainingTimesLastYear,
YearsAtCompany,
YearsInCurrentRole,
YearsSinceLastPromotion,
YearsWithCurrManager,
Education,
EnvironmentSatisfaction,
JobInvolvement,
JobLevel,
JobSatisfaction,
PerformanceRating,
RelationshipSatisfaction,
StockOptionLevel,
WorkLifeBalance
)
factors = attr %>% select(
BusinessTravel,
Department,
EducationField,
Gender,
JobRole,
MaritalStatus,
OverTime
)
library(corrplot)
library(corrgram)
corr <- round(cor(continuous_features), 1)
p.mat <- cor_pmat(continuous_features)
ggcorrplot(corr)
uncorrelated_features = c(
'DailyRate',
'DistanceFromHome',
'EmployeeNumber',
'HourlyRate',
'MonthlyRate',
'TrainingTimesLastYear',
'EnvironmentSatisfaction',
'JobInvolvement',
'JobSatisfaction',
'RelationshipSatisfaction',
'StockOptionLevel',
'WorkLifeBalance'
)
feat1  = attr %>% select(Attrition, YearsAtCompany, YearsInCurrentRole, YearsSinceLastPromotion, YearsWithCurrManager)
ggpairs(feat1, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
attr$LogYearsAtCompany = log(attr$YearsAtCompany + 1)
attr$LogYearsInCurrentRole = log(attr$YearsInCurrentRole + 1)
attr$LogYearsSinceLastPromotion = log(attr$YearsSinceLastPromotion + 1)
attr$LogYearsWithCurrManager = log(attr$YearsWithCurrManager + 1)
feat2 = attr %>% select(Attrition, LogYearsAtCompany, LogYearsInCurrentRole, LogYearsSinceLastPromotion, LogYearsWithCurrManager)
ggpairs(feat2, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
attr$YearsBeforeCompany = attr$TotalWorkingYears - attr$YearsAtCompany
attr$LogTotalWorkingYears = log(attr$TotalWorkingYears + 1)
feat3  = attr %>% select(Attrition, Age, MonthlyIncome, YearsBeforeCompany, JobLevel)
ggpairs(feat3, mapping=ggplot2::aes(color = Attrition), progress = FALSE)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(caret)
library(SuperLearner)
library(gridExtra)
library(psych)
library(stats)
wt_salary <- read.csv(file.choose(), header = TRUE)
attrition <- wt_salary
attrition_yes <- gsub("Yes", "Resigned",attrition$Attrition, ignore.case=T)
attrition_no <- gsub("No", "Employed",attrition_yes, ignore.case=T)
attrition$Attrition <- attrition_no
attrition %>% ggplot(aes(x= JobRole, y = RelationshipSatisfaction, fill = Attrition)) +
geom_boxplot() +
labs(title = "Boxplot of Job Role vs Relationship Satisfaction by Attrition") +
coord_flip()
Employee_status_count <- cbind(attrition$Attrition, attrition$Gender)
Employee_status_count <- with(attrition, table(Gender, Attrition))
Employee_status_count1 <- data.frame(Employee_status_count)
percent_Attrition <- round(Employee_status_count1$Freq/sum(Employee_status_count1$Freq)*100)
Attrition_With_percent <- paste(percent_Attrition,"%",sep="")  # add percents to labels
Gender <- paste(Employee_status_count1$Gender,Employee_status_count1$Attrition,Attrition_With_percent)
pie(percent_Attrition,labels = Gender, col=topo.colors(length(Gender)),
main="Pie Chart of Total Attrition by Gender and Percentage")
describe(attrition$DistanceFromHome)
attrition$DistanceFromHome <-  attrition %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attrition <- attrition$DistanceFromHome
DistanceFromHome_Attrition <- attrition %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
####################################################################################
library(dbplyr)
library(dplyr)
describe(attrition$DistanceFromHome)
attrition$DistanceFromHome <-  attrition %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attrition <- attrition$DistanceFromHome
DistanceFromHome_Attrition <- attrition %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
####################################################################################
library(plyr)
attrition$DistanceFromHome <-  attrition %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition$DistanceFromHome), "Low", "High")))
attrition <- attrition$DistanceFromHome
DistanceFromHome_Attrition <- attrition %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
describe(attrition$DistanceFromHome)
class(attrition$DistanceFromHome)
attrition$DistanceFromHome
attrition1 <- read_csv(C:\Users\korku\Documents\MY SMU COURSES\Fall 2020\DS_6306 Doing Data Science\DS_6306\Asssignment\My Case_Study_2\CaseStudy2-data.csv)
attrition1 <- read_csv(C:\Users\korku\Documents\MY SMU COURSES\Fall 2020\DS_6306 Doing Data Science\DS_6306\Asssignment\My Case_Study_2\CaseStudy2-data.csv)
attrition1 <- read_csv(C:/Users/korku/Documents/MY SMU COURSES/Fall 2020/DS_6306 Doing Data Science/DS_6306/Asssignment/My Case_Study_2/CaseStudy2-data.csv)
getwd()
setwd("C:/Users/korku/Documents/MY SMU COURSES/Fall 2020/DS_6306 Doing Data Science/DS_6306/Asssignment/My Case_Study_2")
getwd()
attrition1 <- read_csv("CaseStudy2-data.csv")
view(attrition)
view(attrition1)
describe(attrition1$DistanceFromHome)
attrition1$DistanceFromHome <-  attrition1 %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= mean(attrition1$DistanceFromHome), "Low", "High")))
attrition1 <- attrition1$DistanceFromHome
DistanceFromHome_Attrition <- attrition1 %>% group_by(DistanceFromHome)%>% summarise(name_count = n())
describe(attrition1$DistanceFromHome)
attrition1$DistanceFromHome
ggplot(attrition1, mapping= aes(x=DistanceFromHome, fill= attrition1)) + geom_bar(position="dodge2") + geom_text(aes(y=..count.., label = ..count..), position="dodge2", stat = "count", vjust = 1.6, colour = "black") +
labs(x="Distance_From_Home", y = 'Frequency_of_Travel')+ ggtitle("Distance_From_Home")
attrition <- read_csv("CaseStudy2-data.csv")
attrition1$DistanceFromHome
attrition$DistanceFromHome
attrition_yes <- gsub("Yes", "Resigned",attrition$attrition, ignore.case=T)
attrition_no <- gsub("No", "Employed",attrition_yes, ignore.case=T)
attrition$attrition <- attrition_no
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(caret)
library(SuperLearner)
library(gridExtra)
library(psych)
library(stats)
attrition <- read_csv("CaseStudy2-data.csv")
attrition_yes <- gsub("Yes", "Resigned",attrition$attrition, ignore.case=T)
summary(attrition$attrition)
attrition <- read_csv("CaseStudy2-data.csv")
view(attrition)
attrition_yes <- gsub("Yes", "Resigned",attrition$attrition, ignore.case=T)
attrition_no <- gsub("No", "Employed",attrition_yes, ignore.case=T)
attrition$attrition <- attrition_no
attrition <- read_csv("CaseStudy2-data.csv")
attrition_yes <- gsub("Yes", "Resigned",attrition$attrition, ignore.case=T)
names(attrition)
attrition_yes <- gsub("Yes", "Resigned",attrition$Attrition, ignore.case=T)
attrition_no <- gsub("No", "Employed",attrition_yes, ignore.case=T)
attrition_yes
attrition$Attrition <- attrition_no
attrition$Attrition
describe(attrition$DistanceFromHome)
attrition$DistanceFromHome1 <-  attrition %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= median(attrition$DistanceFromHome), "Low", "High")))
attrition$DistanceFromHome1
DistanceFromHome_Attrition <- attrition %>% group_by(DistanceFromHome1)%>% summarise(name_count = n())
DistanceFromHome_Attrition <- attrition %>% group_by(DistanceFromHome1)%>% summarise(name_count =())
DistanceFromHome_Attrition <- attrition %>% group_by(DistanceFromHome1)%>% summarise(name_count = n())
table(attrition$DistanceFromHome1)
head(attrition)
attrition1 <-  attrition %>% mutate(DistanceFromHome = as.factor(if_else(DistanceFromHome <= median(attrition$DistanceFromHome), "Low", "High")))
attrition1
attrition <- read_csv("CaseStudy2-data.csv")
attrition_yes <- gsub("Yes", "Resigned",attrition$Attrition, ignore.case=T)
attrition_no <- gsub("No", "Employed",attrition_yes, ignore.case=T)
attrition$Attrition <- attrition_no
attrition1 <-  attrition %>% mutate(DistanceFromHome1 = as.factor(if_else(DistanceFromHome <= median(attrition$DistanceFromHome), "Low", "High")))
table(attrition1$DistanceFromHome1)
attrition1 %>% group_by(DistanceFromHome1)%>% summarise(name_count = n())
attrition1
attrition1 %>% group_by(DistanceFromHome1) %>% summarise(name_count = n())
library(plyr)
library(dplyr)
attrition1 %>% group_by(DistanceFromHome1) %>% summarise(name_count = n())
attrition1 %>% group_by(DistanceFromHome1) %>% summarise(name_count = n())
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = n())
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = sum(!is.na(DistanceFromHome1)))
attrition1$cnt=1
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = sum(cnt)))
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = sum(cnt))
table(attrition1$DistanceFromHome1)
table(attrition1$DistanceFromHome1)
attrition1 <-  attrition %>% mutate(DistanceFromHome1 = (if_else(DistanceFromHome <= median(attrition$DistanceFromHome), "Low", "High")))
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = sum(cnt))
attrition1$cnt=1
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = sum(cnt))
table(attrition1$DistanceFromHome1)
attrition1 %>% group_by(DistanceFromHome1)%>% summarise(name_count = n())
?n()
attrition1 %>% tibble %>% group_by(DistanceFromHome1) %>% summarise(name_count = mean(cnt))
attrition1
attrition1 %>% tibble %>% group_by(EducationField) %>% summarise(name_count = mean(cnt))
attrition1 %>% tibble %>% group_by(EducationField) %>% summarise(name_count = sum(cnt))
mean
attrition1 %>% tibble %>% group_by(EducationField) %>% summarise(name_count = mean(cnt))
